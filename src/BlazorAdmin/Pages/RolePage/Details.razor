@using BlazorAdmin.Interfaces
@using Microsoft.eShopWeb.Infrastructure.Identity
@inject ILogger<Details> Logger
@inject IJSRuntime JSRuntime
@inject IRoleManagementService RoleManagementService

@namespace BlazorAdmin.Pages.RolePage


<div class="modal @_modalClass" tabindex="-1" role="dialog" style="display:@_modalDisplay">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">@_roleName Role - Members</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close" @onclick="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">

                @if (_members == null)
                {
                    <Spinner></Spinner>
                }
                else
                {
                    <div class="container">
                        <div class="row">
                            <ul>
                                @foreach (var member in _members){
                                    <li>@member.UserName</li>
                                }
                            </ul>                           
                        </div>

                    </div>
                }

            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal" @onclick="Close">Close</button>                
            </div>
        </div>
    </div>
</div>

@if (_showDetailsModal)
{
    <div class="modal-backdrop fade show"></div>
}

@code {
    private string _modalDisplay = "none;";
    private string _modalClass = "";    
    private bool _showDetailsModal = false;
    private string _roleName = "";
    private List<ApplicationUser> _members = new List<ApplicationUser>();

    public async Task Open(string id, string name)
    {
        _roleName = name;

        Logger.LogInformation("Now loading details for {name}... /Role/Details/{Id}", name, id);

        await new Css(JSRuntime).HideBodyOverflow();

        _members = (await RoleManagementService.GetMembershipByName(name)).RoleMembers;

        _modalDisplay = "block;";
        _modalClass = "Show";
        _showDetailsModal = true;

        StateHasChanged();
    }

    public async Task Close()
    {
        await new Css(JSRuntime).ShowBodyOverflow();

        _modalDisplay = "none";
        _modalClass = "";
        _showDetailsModal = false;
    }

}
